image: docker:stable

variables:
  MAJOR_VERSION: 1
  MINOR_VERSION: 0
  TAGGING: itwin/api-cache

stages:
  - Install Dependencies
  - Build Image
  - Push to Docker Hub

api test:
  stage: Install Dependencies
  only:
    refs:
      - development
    variables:
      - $CI_COMMIT_MESSAGE =~ /push-to-docker/
  image: node:12.13.0-alpine
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules/
  script:
    - npm ci

docker build:
  stage: Build Image
  only:
    refs:
      - development
    variables:
      - $CI_COMMIT_MESSAGE =~ /push-to-docker/
  cache: 
    key: $CI_COMMIT_REF_SLUG-$CI_PROJECT_DIR
    paths:
      - node_modules/
    policy: pull
  before_script:
    - cp $ENV .env
    - echo $CI_PIPELINE_IID
    - echo $ARTIFACT_DOWNLOAD_ATTEMPTS
    - echo $CHAT_CHANNEL
    - echo $CHAT_INPUT
    - echo $CI
    - echo $CI_API_V4_URL
    - echo $CI_BUILDS_DIR
    - echo $CI_COMMIT_BEFORE_SHA
    - echo $CI_COMMIT_DESCRIPTION
    - echo $CI_COMMIT_MESSAGE
    - echo $CI_COMMIT_REF_NAME
    - echo $CI_COMMIT_REF_PROTECTED
    - echo $CI_COMMIT_REF_SLUG
    - echo $CI_COMMIT_SHA
    - echo $CI_COMMIT_SHORT_SHA
    - echo $CI_COMMIT_BRANCH
    - echo $CI_COMMIT_TAG
    - echo $CI_COMMIT_TITLE
    - echo $CI_CONCURRENT_ID
    - echo $CI_CONCURRENT_PROJECT_ID
    - echo $CI_CONFIG_PATH
    - echo $CI_DEBUG_TRACE
    - echo $CI_DEFAULT_BRANCH
    - echo $CI_DEPLOY_PASSWORD
    - echo $CI_DEPLOY_USER
    - echo $CI_DISPOSABLE_ENVIRONMENT
    - echo $CI_ENVIRONMENT_NAME
    - echo $CI_ENVIRONMENT_SLUG
    - echo $CI_ENVIRONMENT_URL
    - echo $CI_EXTERNAL_PULL_REQUEST_IID
    - echo $CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_NAME
    - echo $CI_EXTERNAL_PULL_REQUEST_SOURCE_BRANCH_SHA
    - echo $CI_EXTERNAL_PULL_REQUEST_TARGET_BRANCH_NAME
    - echo $CI_EXTERNAL_PULL_REQUEST_TARGET_BRANCH_SHA
    - echo $CI_JOB_ID
    - echo $CI_JOB_MANUAL
    - echo $CI_JOB_NAME
    - echo $CI_JOB_STAGE
    - echo $CI_JOB_TOKEN
    - echo $CI_JOB_URL
    - echo $CI_MERGE_REQUEST_ASSIGNEES
    - echo $CI_MERGE_REQUEST_ID
    - echo $CI_MERGE_REQUEST_IID
    - echo $CI_MERGE_REQUEST_LABELS
    - echo $CI_MERGE_REQUEST_MILESTONE
    - echo $CI_MERGE_REQUEST_PROJECT_ID
    - echo $CI_MERGE_REQUEST_PROJECT_PATH
    - echo $CI_MERGE_REQUEST_PROJECT_URL
    - echo $CI_MERGE_REQUEST_REF_PATH
    - echo $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME
    - echo $CI_MERGE_REQUEST_SOURCE_BRANCH_SHA
    - echo $CI_MERGE_REQUEST_SOURCE_PROJECT_ID
    - echo $CI_MERGE_REQUEST_SOURCE_PROJECT_PATH
    - echo $CI_MERGE_REQUEST_SOURCE_PROJECT_URL
    - echo $CI_MERGE_REQUEST_TARGET_BRANCH_NAME
    - echo $CI_MERGE_REQUEST_TARGET_BRANCH_SHA
    - echo $CI_MERGE_REQUEST_TITLE
    - echo $CI_MERGE_REQUEST_EVENT_TYPE
    - echo $CI_NODE_INDEX
    - echo $CI_NODE_TOTAL
    - echo $CI_PAGES_DOMAIN
    - echo $CI_PAGES_URL
    - echo $CI_PIPELINE_ID
    - echo $CI_PIPELINE_IID
    - echo $CI_PIPELINE_SOURCE
    - echo $CI_PIPELINE_TRIGGERED
    - echo $CI_PIPELINE_URL
    - echo $CI_PROJECT_DIR
    - echo $CI_PROJECT_ID
    - echo $CI_PROJECT_NAME
    - echo $CI_PROJECT_NAMESPACE
    - echo $CI_PROJECT_PATH
    - echo $CI_PROJECT_PATH_SLUG
    - echo $CI_PROJECT_REPOSITORY_LANGUAGES
    - echo $CI_PROJECT_TITLE
    - echo $CI_PROJECT_URL
    - echo $CI_PROJECT_VISIBILITY
    - echo $CI_REGISTRY
    - echo $CI_REGISTRY_IMAGE
    - echo $CI_REGISTRY_PASSWORD
    - echo $CI_REGISTRY_USER
    - echo $CI_REPOSITORY_URL
    - echo $CI_RUNNER_DESCRIPTION
    - echo $CI_RUNNER_EXECUTABLE_ARCH
    - echo $CI_RUNNER_ID
    - echo $CI_RUNNER_REVISION
    - echo $CI_RUNNER_SHORT_TOKEN
    - echo $CI_RUNNER_TAGS
    - echo $CI_RUNNER_VERSION
    - echo $CI_SERVER
    - echo $CI_SERVER_URL
    - echo $CI_SERVER_HOST
    - echo $CI_SERVER_PORT
    - echo $CI_SERVER_PROTOCOL
    - echo $CI_SERVER_NAME
    - echo $CI_SERVER_REVISION
    - echo $CI_SERVER_VERSION
    - echo $CI_SERVER_VERSION_MAJOR
    - echo $CI_SERVER_VERSION_MINOR
    - echo $CI_SERVER_VERSION_PATCH
    - echo $CI_SHARED_ENVIRONMENT
    - echo $GET_SOURCES_ATTEMPTS
    - echo $GITLAB_CI
    - echo $GITLAB_FEATURES
    - echo $GITLAB_USER_EMAIL
    - echo $GITLAB_USER_ID
    - echo $GITLAB_USER_LOGIN
    - echo $GITLAB_USER_NAME
    - echo $RESTORE_CACHE_ATTEMPTS
    - export TAG=$TAGGING:$MAJOR_VERSION.$MINOR_VERSION.$CI_PIPELINE_IID-dev
    - echo $TAG
  script:  
    - docker build -t $TAG .

docker push:
  stage: Push to Docker Hub
  only:
    refs:
      - development
    variables:
      - $CI_COMMIT_MESSAGE =~ /push-to-docker/
  before_script:
    - export TAG=$TAGGING:$MAJOR_VERSION.$MINOR_VERSION.$CI_PIPELINE_IID-dev
    - echo $TAG
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USER" --password-stdin
    - docker push $TAG && docker image rm $TAG
